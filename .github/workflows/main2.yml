name: CI/CD Pipeline2

env:
  IMAGE_NAME: knock-knock-app
  CONTAINER_NAME: knock-knock-app
  PROJECT_DIR: /root/project/knock-knock

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy-to-server:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          port: 22
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            # Update .env file with the latest image tag
            sudo echo "PROJECT_ROOT=${{ env.PROJECT_DIR }}" > ${{ env.PROJECT_DIR }}/.env.back
            sudo echo "BACKEND_DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> ${{ env.PROJECT_DIR }}/.env.back
            sudo echo "BACKEND_IMAGE_NAME=${{ env.IMAGE_NAME }}" >> ${{ env.PROJECT_DIR }}/.env.back
            sudo echo "BACKEND_IMAGE_TAG=${{ github.sha }}" >> ${{ env.PROJECT_DIR }}/.env.back

            sudo cat ${{ env.PROJECT_DIR }}/.env.front > ${{ env.PROJECT_DIR }}/.env
            sudo cat ${{ env.PROJECT_DIR }}/.env.back >> ${{ env.PROJECT_DIR }}/.env
            
            # Update podman-compose.yml with the latest image tag
            # sed -i 's|image: docker.io/.*/${{ env.IMAGE_NAME }}:.*|image: docker.io/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}|' /root/project/knock-knock/podman-compose.yml

            # Pull the latest image
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

            # Stop and remove the existing container
            sudo docker-compose -f ${{ env.PROJECT_DIR }}/podman-compose3.yml down || true

            # Start the new container using the updated podman-compose3.yml
            sudo docker-compose -f ${{ env.PROJECT_DIR }}/podman-compose3.yml up -d

            # Clean up unused Docker images
            sudo docker image prune -af
